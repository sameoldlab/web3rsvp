"use strict";var n=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var h=(c,e)=>{for(var t in e)n(c,t,{get:e[t],enumerable:!0})},B=(c,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let i of k(e))!g.call(c,i)&&i!==t&&n(c,i,{get:()=>e[i],enumerable:!(s=p(e,i))||s.enumerable});return c};var K=c=>B(n({},"__esModule",{value:!0}),c);var L={};h(L,{Signer:()=>f,getCurve:()=>o});module.exports=K(L);var r=require("@ethersproject/bytes"),l=require("@fuel-ts/address"),m=require("@fuel-ts/hasher"),u=require("@fuel-ts/keystore"),d=require("@fuel-ts/math"),P=require("elliptic");function o(){return new P.ec("secp256k1")}var a=class{constructor(e){typeof e=="string"&&e.match(/^[0-9a-f]*$/i)&&e.length===64&&(e=`0x${e}`);let t=(0,r.arrayify)(e),s=o().keyFromPrivate(t,"hex");this.compressedPublicKey=(0,r.hexlify)(s.getPublic(!0,"array")),this.publicKey=(0,r.hexlify)(s.getPublic(!1,"array").slice(1)),this.privateKey=(0,r.hexlify)(t),this.address=l.Address.fromPublicKey(this.publicKey)}sign(e){let s=o().keyFromPrivate((0,r.arrayify)(this.privateKey),"hex").sign((0,r.arrayify)(e),{canonical:!0}),i=(0,d.toBytes)(s.r,32),y=(0,d.toBytes)(s.s,32);return y[0]|=(s.recoveryParam||0)<<7,(0,r.hexlify)((0,r.concat)([i,y]))}addPoint(e){let t=o().keyFromPublic((0,r.arrayify)(this.compressedPublicKey)),s=o().keyFromPublic((0,r.arrayify)(e)),i=t.getPublic().add(s.getPublic());return(0,r.hexlify)(i.encode("array",!0))}static recoverPublicKey(e,t){let s=(0,r.arrayify)(t),i=s.slice(0,32),y=s.slice(32,64),b=(y[0]&128)>>7;return y[0]&=127,o().recoverPubKey((0,r.arrayify)(e),{r:i,s:y},b).encode("array",!1).slice(1)}static recoverAddress(e,t){return l.Address.fromPublicKey(a.recoverPublicKey(e,t))}static generatePrivateKey(e){return e?(0,m.hash)((0,r.concat)([(0,u.randomBytes)(32),(0,r.arrayify)(e)])):(0,u.randomBytes)(32)}static extendPublicKey(e){let t=o().keyFromPublic((0,r.arrayify)(e));return(0,r.hexlify)(t.getPublic(!1,"array").slice(1))}},f=a;0&&(module.exports={Signer,getCurve});
//# sourceMappingURL=index.js.map