"use strict";var q=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var G=Object.getOwnPropertyNames;var j=Object.prototype.hasOwnProperty;var H=(o,s)=>()=>(o&&(s=o(o=0)),s);var M=(o,s)=>{for(var e in s)q(o,e,{get:s[e],enumerable:!0})},J=(o,s,e,t)=>{if(s&&typeof s=="object"||typeof s=="function")for(let r of G(s))!j.call(o,r)&&r!==e&&q(o,r,{get:()=>s[r],enumerable:!(t=V(s,r))||t.enumerable});return o};var $=o=>J(q({},"__esModule",{value:!0}),o);var i=H(()=>{});var te={};M(te,{BaseWalletLocked:()=>g,BaseWalletUnlocked:()=>w,TestUtils:()=>U,Wallet:()=>y,WalletLocked:()=>v,WalletUnlocked:()=>a});module.exports=$(te);i();i();var T=require("@ethersproject/bytes"),B=require("@fuel-ts/address"),h=require("@fuel-ts/constants"),F=require("@fuel-ts/interfaces"),O=require("@fuel-ts/math"),u=require("@fuel-ts/providers"),x=require("@fuel-ts/transactions");i();var l="http://127.0.0.1:4000/graphql";var g=class extends F.AbstractWallet{constructor(e,t=l){super();this.provider=this.connect(t),typeof e=="string"?this._address=B.Address.fromString(e):this._address=(0,B.addressify)(e)}get address(){return this._address}connect(e){if(e)typeof e=="string"?this.provider=new u.Provider(e):this.provider=e;else throw new Error("Provider is required");return this.provider}async getResourcesToSpend(e,t){return this.provider.getResourcesToSpend(this.address,e,t)}async getCoins(){let e=[],r;for(;;){let n=await this.provider.getCoins(this.address,void 0,{first:9999,after:r});if(e.push(...n),!(n.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return e}async getMessages(){let e=[],r;for(;;){let n=await this.provider.getMessages(this.address,{first:9999,after:r});if(e.push(...n),!(n.length>=9999))break;throw new Error(`Wallets with more than ${9999} messages are not yet supported`)}return e}async getBalance(e=h.NativeAssetId){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],r;for(;;){let n=await this.provider.getBalances(this.address,{first:9999,after:r});if(e.push(...n),!(n.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),r=await this.getResourcesToSpend([t]);e.addResources(r)}async transfer(e,t,r=h.NativeAssetId,n={}){let c={gasLimit:x.MAX_GAS_PER_TX,...n},d=new u.ScriptTransactionRequest(c);d.addCoinOutput(e,t,r);let m=d.calculateFee(),f=[];m.assetId===(0,T.hexlify)(r)?(m.amount.add(t),f=[m]):f=[[t,r],m];let S=await this.getResourcesToSpend(f);return d.addResources(S),this.sendTransaction(d)}async withdrawToBaseLayer(e,t,r={}){let n=(0,T.arrayify)("0x".concat(e.toHexString().substring(2).padStart(64,"0"))),c=(0,T.arrayify)("0x".concat((0,O.bn)(t).toHex().substring(2).padStart(16,"0"))),m={script:new Uint8Array([...(0,T.arrayify)(u.withdrawScript.bytes),...n,...c]),gasLimit:x.MAX_GAS_PER_TX,...r},f=new u.ScriptTransactionRequest(m);f.addMessageOutputs();let S=f.calculateFee(),W=[];S.amount.add(t),W=[S];let I=await this.getResourcesToSpend(W);return f.addResources(I),this.sendTransaction(f)}async sendTransaction(e){let t=(0,u.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(t)}async simulateTransaction(e){let t=(0,u.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.simulate(t)}async buildPredicateTransaction(e,t,r=h.NativeAssetId,n){let c={fundTransaction:!0,...n},d=new u.ScriptTransactionRequest({gasLimit:x.MAX_GAS_PER_TX,...c});d.addCoinOutput(e,t,r);let m=[];if(c.fundTransaction&&m.push(d.calculateFee()),m.length){let f=await this.getResourcesToSpend(m);d.addResources(f)}return d}async submitPredicate(e,t,r=h.NativeAssetId,n){let c=await this.buildPredicateTransaction(e,t,r,n);return(await this.sendTransaction(c)).waitForResult()}async submitSpendPredicate(e,t,r,n=h.NativeAssetId,c){return this.provider.submitSpendPredicate(e,t,this.address,r,n,c)}};i();var L=require("@fuel-ts/hasher"),b=require("@fuel-ts/providers"),z=require("@fuel-ts/signer");var w=class extends g{constructor(e,t=l){let r=new z.Signer(e);super(r.address,t);this.signer=()=>r,this.provider=this.connect(t)}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}async signMessage(e){return this.signer().sign((0,L.hashMessage)(e))}async signTransaction(e){let t=(0,b.transactionRequestify)(e),r=(0,L.hashTransaction)(t);return this.signer().sign(r)}async populateTransactionWitnessesSignature(e){let t=(0,b.transactionRequestify)(e),r=await this.signTransaction(t);return t.updateWitnessByOwner(this.address,r),t}async sendTransaction(e){let t=(0,b.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.sendTransaction(await this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=(0,b.transactionRequestify)(e);return await this.provider.addMissingVariables(t),this.provider.call(await this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}};w.defaultPath="m/44'/1179993420'/0'/0/0";i();i();var k=require("@fuel-ts/hdwallet"),Q=require("@fuel-ts/mnemonic"),K=require("@fuel-ts/signer");var v=class extends g{unlock(s){return new a(s,this.provider)}},a=class extends w{lock(){return this.signer=()=>new K.Signer("0x00"),new v(this.address,this.provider)}static generate(s){let e=K.Signer.generatePrivateKey(s==null?void 0:s.entropy);return new a(e,s==null?void 0:s.provider)}static fromSeed(s,e){let r=k.HDWallet.fromSeed(s).derivePath(e||a.defaultPath);return new a(r.privateKey)}static fromMnemonic(s,e,t){let r=Q.Mnemonic.mnemonicToSeed(s,t),c=k.HDWallet.fromSeed(r).derivePath(e||a.defaultPath);return new a(c.privateKey)}static fromExtendedKey(s){let e=k.HDWallet.fromExtendedKey(s);return new a(e.privateKey)}};var y=class{static fromAddress(s,e=l){return new v(s,e)}static fromPrivateKey(s,e=l){return new a(s,e)}};y.generate=a.generate,y.fromSeed=a.fromSeed,y.fromMnemonic=a.fromMnemonic,y.fromExtendedKey=a.fromExtendedKey;var U={};M(U,{generateTestWallet:()=>ee,seedWallet:()=>D});i();i();i();i();i();var X=require("@ethersproject/bytes");i();var A,E="Node";typeof globalThis<"u"&&globalThis.crypto&&(A=globalThis.crypto,E="Web");if(!A&&typeof require=="function")try{A=require("crypto"),E="Node"}catch(o){console.error("keystore expects a standard Web browser or Node environment.",o)}var P=A,C=E;i();var R=o=>C==="Node"?P.randomBytes(o):P.getRandomValues(new Uint8Array(o));i();var N=require("@fuel-ts/providers");var D=async(o,s)=>{let e=new a(process.env.GENESIS_SECRET||R(32),o.provider),t=await e.getResourcesToSpend(s),r=new N.ScriptTransactionRequest({gasLimit:1e4,gasPrice:1});r.addResources(t),s.map(N.coinQuantityfy).forEach(({amount:c,assetId:d})=>r.addCoinOutput(o.address,c,d)),await(await e.sendTransaction(r)).wait()},ee=async(o,s)=>{let e=y.generate({provider:o});return s&&await D(e,s),e};0&&(module.exports={BaseWalletLocked,BaseWalletUnlocked,TestUtils,Wallet,WalletLocked,WalletUnlocked});
//# sourceMappingURL=index.js.map