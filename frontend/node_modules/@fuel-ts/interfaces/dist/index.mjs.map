{"version":3,"sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nexport type Bech32Address = `fuel${string}`;\nexport type B256Address = string;\n\nexport abstract class AbstractScript<T> {\n  abstract bytes: Uint8Array;\n  abstract encodeScriptData: (data: T) => Uint8Array;\n}\n\nexport abstract class AbstractAddress {\n  abstract toJSON(): string;\n  abstract toString(): string;\n  abstract toAddress(): Bech32Address;\n  abstract toB256(): B256Address;\n  abstract toHexString(): string;\n  abstract toBytes(): Uint8Array;\n  abstract equals(other: AbstractAddress): boolean;\n}\n\nexport abstract class AbstractContract {\n  abstract id: AbstractAddress;\n}\n\nexport abstract class AbstractWallet {\n  abstract address: AbstractAddress;\n}\n\nexport type AddressLike = AbstractAddress | AbstractWallet;\n\nexport type ContractIdLike = AbstractAddress | AbstractContract;\n\nexport abstract class AbstractPredicate {\n  abstract bytes: Uint8Array;\n  abstract address: AbstractAddress;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  abstract types?: ReadonlyArray<any>;\n}\n"],"mappings":"AAIO,IAAeA,EAAf,KAAiC,CAGxC,EAEsBC,EAAf,KAA+B,CAQtC,EAEsBC,EAAf,KAAgC,CAEvC,EAEsBC,EAAf,KAA8B,CAErC,EAMsBC,EAAf,KAAiC,CAKxC","names":["AbstractScript","AbstractAddress","AbstractContract","AbstractWallet","AbstractPredicate"]}