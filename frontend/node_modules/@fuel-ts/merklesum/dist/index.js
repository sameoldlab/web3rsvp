"use strict";var a=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var P=Object.prototype.hasOwnProperty;var j=(s,r)=>{for(var t in r)a(s,t,{get:r[t],enumerable:!0})},k=(s,r,t,i)=>{if(r&&typeof r=="object"||typeof r=="function")for(let e of H(r))!P.call(s,e)&&e!==t&&a(s,e,{get:()=>r[e],enumerable:!(i=S(r,e))||i.enumerable});return s};var z=s=>k(a({},"__esModule",{value:!0}),s);var T={};j(T,{calcRoot:()=>v,constructTree:()=>L,getProof:()=>R,hashLeaf:()=>x,hashNode:()=>b});module.exports=z(T);var c=require("@fuel-ts/math"),p=require("@fuel-ts/merkle-shared");var f=class{constructor(r,t,i,e,u,o,n=0){this.left=r,this.right=t,this.parent=i,this.hash=e,this.sum=u,this.data=o,this.index=n}},l=f;var m=class{constructor(r,t){this.sideNodes=r,this.nodeSums=t}},w=m;function x(s,r){return(0,p.hash)("0x00".concat((0,c.toHex)(s,32).slice(2)).concat(r.slice(2)))}function b(s,r,t,i){return(0,p.hash)("0x01".concat((0,c.toHex)(s,32).slice(2)).concat(r.slice(2)).concat((0,c.toHex)(t,32).slice(2)).concat(i.slice(2)))}function L(s,r){let t=[];for(let n=0,h=r.length;n<h;n+=1){let g=x(s[n],r[n]),N=new l(-1,-1,-1,g,s[n],r[n]);N.index=n,t.push(N)}let i=[...t],e=[...t],u=t.length+1>>1,o=t.length&1;for(;;){let n=0;for(;n<u-o;n+=1){let h=n<<1,g=b(e[h].sum,e[h].hash,e[h+1].sum,e[h+1].hash);t[n]=new l(e[h].index,e[h+1].index,-1,g,(0,c.bn)(e[h].sum).add(e[h+1].sum).toHex(),""),t[n].index=i.length,i[e[h].index].parent=i.length,i[e[h+1].index].parent=i.length,i.push(t[n])}if(o===1&&(t[n]=e[n<<1]),u===1)break;o=u&1,u=u+1>>1,e=[...t]}return i}function v(s,r){let t=[];for(let o=0;o<r.length;o+=1){let n=x(s[o],r[o]);t.push(new l(-1,-1,-1,n,s[o],r[o]))}let i=t,e=t.length+1>>1,u=t.length&1;for(;;){let o=0;for(;o<e-u;o+=1){let n=o<<1,h=b(i[n].sum,i[n].hash,i[n+1].sum,i[n+1].hash);t[o]=new l(i[n].index,i[n+1].index,-1,h,(0,c.bn)(i[n].sum).add(i[n+1].sum).toHex(),"")}if(u===1&&(t[o]=i[o<<1]),e===1)break;u=e&1,e=e+1>>1,i=t}return t[0]}function R(s,r){let t=new w([],[]);for(let i=r,e=s[r].parent;e!==-1;i=e,e=s[e].parent)s[e].left===i?(t.sideNodes.push(s[s[e].right].hash),t.nodeSums.push(s[s[e].right].sum)):(t.sideNodes.push(s[s[e].left].hash),t.nodeSums.push(s[s[e].left].sum));return t}0&&(module.exports={calcRoot,constructTree,getProof,hashLeaf,hashNode});
//# sourceMappingURL=index.js.map