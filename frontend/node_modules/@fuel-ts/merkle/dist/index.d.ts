declare class Node {
    left: number;
    right: number;
    parent: number;
    hash: string;
    data: string;
    index: number;
    constructor(left: number, right: number, parent: number, hash: string, data: string, index?: number);
}

/**
 * Slice off the '0x' on each argument to simulate abi.encodePacked
 */
declare function hashLeaf(data: string): string;
/**
 * Slice off the '0x' on each argument to simulate abi.encodePacked
 * hash(prefix +  left + right)
 */
declare function hashNode(left: string, right: string): string;
/**
 * Construct tree
 */
declare function constructTree(data: string[]): Node[];
/**
 * Compute the merkle root
 */
declare function calcRoot(data: string[]): string;
/**
 * Get proof for the leaf
 */
declare function getProof(nodes: Node[], id: number): string[];

export { calcRoot, constructTree, getProof, hashLeaf, hashNode };
