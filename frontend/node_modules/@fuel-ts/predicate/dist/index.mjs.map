{"version":3,"sources":["../src/predicate.ts"],"sourcesContent":["import type { BytesLike } from '@ethersproject/bytes';\nimport { arrayify } from '@ethersproject/bytes';\nimport type { JsonAbiFragmentType } from '@fuel-ts/abi-coder';\nimport { Address } from '@fuel-ts/address';\nimport { ContractUtils } from '@fuel-ts/contract';\nimport { AbstractPredicate } from '@fuel-ts/interfaces';\nimport type { AbstractAddress } from '@fuel-ts/interfaces';\n\nexport class Predicate extends AbstractPredicate {\n  bytes: Uint8Array;\n  address: AbstractAddress;\n  types?: ReadonlyArray<JsonAbiFragmentType>;\n\n  constructor(bytes: BytesLike, types?: ReadonlyArray<JsonAbiFragmentType>) {\n    super();\n    this.bytes = arrayify(bytes);\n    this.address = Address.fromB256(ContractUtils.getContractRoot(this.bytes));\n    this.types = types;\n  }\n}\n"],"mappings":"AACA,OAAS,YAAAA,MAAgB,uBAEzB,OAAS,WAAAC,MAAe,mBACxB,OAAS,iBAAAC,MAAqB,oBAC9B,OAAS,qBAAAC,MAAyB,sBAG3B,IAAMC,EAAN,cAAwBD,CAAkB,CAK/C,YAAYE,EAAkBC,EAA4C,CACxE,MAAM,EACN,KAAK,MAAQN,EAASK,CAAK,EAC3B,KAAK,QAAUJ,EAAQ,SAASC,EAAc,gBAAgB,KAAK,KAAK,CAAC,EACzE,KAAK,MAAQI,CACf,CACF","names":["arrayify","Address","ContractUtils","AbstractPredicate","Predicate","bytes","types"]}